// <auto-generated />
using System;
using Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace PCM_LavoroAgile.Migrations.Accordo
{
    [DbContext(typeof(AccordoContext))]
    [Migration("20240701174044_InitDB")]
    partial class InitDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Model.Accordo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AccessoVPN")
                        .HasColumnType("bit");

                    b.Property<Guid>("ChildId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Codice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Codice"));

                    b.Property<string>("CodiceComunicazioneMinisteroLavoro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("CREATION_DATE");

                    b.Property<DateTime?>("DataFineAccordoPrecedente")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataFineUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInizioUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataNotaDipendente")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataNotaDirigente")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataPresaServizio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRecesso")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DerogaPianificazioneDate")
                        .HasColumnType("bit");

                    b.Property<DateTime>("EditTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("EDIT_TIME");

                    b.Property<string>("FasceDiContattabilita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FormazioneLavoroAgile")
                        .HasColumnType("bit");

                    b.Property<string>("GiustificatoMotivoDiRecesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("InvioNotificaNoteCondivise")
                        .HasColumnType("bit");

                    b.Property<string>("Modalita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotaDipendente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotaDirigente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteCondivise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteRefereteInterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteSegreteriaTecnica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumLivelliStruttura")
                        .HasColumnType("int");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PianificazioneDateAccordo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PianificazioneGiorniAccordo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PrimoAccordo")
                        .HasColumnType("bit");

                    b.Property<bool>("Priorita_1")
                        .HasColumnType("bit");

                    b.Property<bool>("Priorita_2")
                        .HasColumnType("bit");

                    b.Property<bool>("PrivacyEConsensoTrattamentoDati")
                        .HasColumnType("bit");

                    b.Property<bool>("RevisioneAccordo")
                        .HasColumnType("bit");

                    b.Property<bool>("SaluteESicurezza")
                        .HasColumnType("bit");

                    b.Property<int>("Stato")
                        .HasColumnType("int");

                    b.Property<string>("StrumentazioneUtilizzata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StrutturaUfficioServizio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UidStrutturaUfficioServizio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValutazioneEsitiAccordoPrecedente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VistoSegreteriaTecnica")
                        .HasColumnType("bit");

                    b.Property<bool>("isValutazionePositiva")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasAlternateKey("Codice");

                    b.ToTable("Accordi");
                });

            modelBuilder.Entity("Domain.Model.AttivitaAccordo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AccordoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Attivita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataATarget")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataDaTarget")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataTarget")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataTargetRaggiunto")
                        .HasColumnType("datetime2");

                    b.Property<string>("DenominazioneIndicatore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<string>("NumeroAssolutoATarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroAssolutoDaTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroAssolutoRaggiunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroAssolutoTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatoreLogicoIndicatoreData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatoreLogicoIndicatoreNumeroAssoluto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatoreLogicoIndicatorePercentuale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperatoreLogicoIndicatoreTesto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PercentualeATarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PercentualeDaTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PercentualeDenominatoreTargetRaggiunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PercentualeIndicatoreDenominazioneDenominatore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PercentualeIndicatoreDenominazioneNumeratore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PercentualeNumeratoreTargetRaggiunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PercentualeTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PercentualeTargetRaggiunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Risultati")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestoTarget")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TestoTargetRaggiunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipologiaIndicatore")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccordoId");

                    b.ToTable("AttivitaAccordo");
                });

            modelBuilder.Entity("Domain.Model.ExternalCommunications.TransmissionStatus", b =>
                {
                    b.Property<Guid>("AccordoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("LastWorkingActivitiesSentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastWorkingDaysSentDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NuovaComunicazioneMinisteroLavoroLastSentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NuovaComunicazioneMinisteroLavoroSendError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NuovaComunicazioneMinisteroLavoroSentSuccessfully")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RecessoComunicazioneMinisteroLavoroLastSentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecessoComunicazioneMinisteroLavoroSendError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RecessoComunicazioneMinisteroLavoroSentSuccessfully")
                        .HasColumnType("bit");

                    b.Property<string>("WorkingActivitiesSendError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WorkingActivitiesSentSuccessfully")
                        .HasColumnType("bit");

                    b.Property<string>("WorkingDaysSendError")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WorkingDaysSentSuccessfully")
                        .HasColumnType("bit");

                    b.HasKey("AccordoId");

                    b.ToTable("TransmissionStatus", (string)null);
                });

            modelBuilder.Entity("Domain.Model.StoricoStato", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AccordoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Autore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stato")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccordoId");

                    b.ToTable("StoricoStato");
                });

            modelBuilder.Entity("Domain.Model.Valutazione", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<Guid>("AccordoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataNoteDipendente")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataNoteDirigente")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoteDipendente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteDirigente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isApprovata")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.ToTable("Valutazione");
                });

            modelBuilder.Entity("Domain.Model.Accordo", b =>
                {
                    b.OwnsOne("Domain.Model.Dirigente", "CapoIntermedio", b1 =>
                        {
                            b1.Property<Guid>("AccordoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("EmailCapoIntermedio");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("IdCapoIntermedio");

                            b1.Property<string>("NomeCognome")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CapoIntermedio");

                            b1.HasKey("AccordoId");

                            b1.ToTable("Accordi");

                            b1.WithOwner()
                                .HasForeignKey("AccordoId");
                        });

                    b.OwnsOne("Domain.Model.Dirigente", "CapoStruttura", b1 =>
                        {
                            b1.Property<Guid>("AccordoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("EmailCapoStruttura");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("IdCapoStruttura");

                            b1.Property<string>("NomeCognome")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CapoStruttura");

                            b1.HasKey("AccordoId");

                            b1.ToTable("Accordi");

                            b1.WithOwner()
                                .HasForeignKey("AccordoId");
                        });

                    b.OwnsOne("Domain.Model.Dirigente", "DirigenteResponsabile", b1 =>
                        {
                            b1.Property<Guid>("AccordoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("EmailDirigenteResponsabile");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("IdDirigenteResponsabile");

                            b1.Property<string>("NomeCognome")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("DirigenteResponsabile");

                            b1.HasKey("AccordoId");

                            b1.ToTable("Accordi");

                            b1.WithOwner()
                                .HasForeignKey("AccordoId");
                        });

                    b.OwnsOne("Domain.Model.Dirigente", "ResponsabileAccordo", b1 =>
                        {
                            b1.Property<Guid>("AccordoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("EmailResponsabileAccordo");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("IdResponsabileAccordo");

                            b1.Property<string>("NomeCognome")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ResponsabileAccordo");

                            b1.HasKey("AccordoId");

                            b1.ToTable("Accordi");

                            b1.WithOwner()
                                .HasForeignKey("AccordoId");
                        });

                    b.OwnsOne("Domain.Model.Dipendente", "Dipendente", b1 =>
                        {
                            b1.Property<Guid>("AccordoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("CategoriaFasciaRetributiva")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CategoriaFasciaRetributiva");

                            b1.Property<string>("CodiceFiscale")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("CodiceFiscale");

                            b1.Property<DateTime?>("DataDiNascita")
                                .HasColumnType("datetime2")
                                .HasColumnName("DataDiNascita");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Email");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("IdDipendente");

                            b1.Property<string>("LuogoDiNascita")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("LuogoDiNascita");

                            b1.Property<string>("NomeCognome")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("NomeCognome");

                            b1.Property<string>("PosizioneGiuridica")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("PosizioneGiuridica");

                            b1.Property<string>("Sesso")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Sesso");

                            b1.HasKey("AccordoId");

                            b1.ToTable("Accordi");

                            b1.WithOwner()
                                .HasForeignKey("AccordoId");
                        });

                    b.OwnsOne("Domain.Model.Referente", "ReferenteInterno", b1 =>
                        {
                            b1.Property<Guid>("AccordoId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("EmailReferenteInterno");

                            b1.Property<Guid>("Id")
                                .HasColumnType("uniqueidentifier")
                                .HasColumnName("IdReferenteInterno");

                            b1.Property<string>("NomeCognome")
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("ReferenteInterno");

                            b1.HasKey("AccordoId");

                            b1.ToTable("Accordi");

                            b1.WithOwner()
                                .HasForeignKey("AccordoId");
                        });

                    b.Navigation("CapoIntermedio");

                    b.Navigation("CapoStruttura");

                    b.Navigation("Dipendente");

                    b.Navigation("DirigenteResponsabile");

                    b.Navigation("ReferenteInterno");

                    b.Navigation("ResponsabileAccordo");
                });

            modelBuilder.Entity("Domain.Model.AttivitaAccordo", b =>
                {
                    b.HasOne("Domain.Model.Accordo", null)
                        .WithMany("ListaAttivita")
                        .HasForeignKey("AccordoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Model.ExternalCommunications.TransmissionStatus", b =>
                {
                    b.HasOne("Domain.Model.Accordo", "Accordo")
                        .WithOne("Transmission")
                        .HasForeignKey("Domain.Model.ExternalCommunications.TransmissionStatus", "AccordoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accordo");
                });

            modelBuilder.Entity("Domain.Model.StoricoStato", b =>
                {
                    b.HasOne("Domain.Model.Accordo", null)
                        .WithMany("StoricoStato")
                        .HasForeignKey("AccordoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Model.Accordo", b =>
                {
                    b.Navigation("ListaAttivita");

                    b.Navigation("StoricoStato");

                    b.Navigation("Transmission");
                });
#pragma warning restore 612, 618
        }
    }
}
